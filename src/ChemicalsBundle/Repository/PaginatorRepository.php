<?php

namespace ChemicalsBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * AtomRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaginatorRepository extends \Doctrine\ORM\EntityRepository
{
    public function getListPaginated($page = 1, $nbMaxParPage = 10)
    {
        if (!is_numeric($page)) {
            throw new InvalidArgumentException(
                'Incorrect value for page parameter : ' . $page . '.'
            );
        }

        if ($page < 1) {
            throw new NotFoundHttpException('Page not found.');
        }

        if (!is_numeric($nbMaxParPage)) {
            throw new InvalidArgumentException(
                'Max per page has to be a positive integer ;' . $nbMaxParPage . '.'
            );
        }
        $firstSet = ($page - 1) * $nbMaxParPage;
        $q = $this->createQueryBuilder("e");
        // A ajouter au paramÃ©trage de MySQL5.7 sinon plantage:
        // /etc/mysql/mysql.d/...cnf [mysqld] sql-mode=""
        $q->orderBy('e.name', 'ASC');
 
        $q
            ->setFirstResult($firstSet)
            ->setMaxResults($nbMaxParPage);

        $paginator = new Paginator($q);

        if ( ($paginator->count() <= $firstSet) && $page != 1) {
            throw new NotFoundHttpException('Page not found.');
        }
        return $paginator;
    }
    
    /**
     * Gets total number of elements contained in database.
     *
     * @return type
     */
    public function getNb() {
        return $this->createQueryBuilder('l')
                    ->select('COUNT(l)')
                    ->getQuery()
                    ->getSingleScalarResult();
    }
}
